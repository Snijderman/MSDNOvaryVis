AzureResCmds.txt - PowerShell CLI Commands for provisioning and configuring the Azure resources needed by the MSDN.OvaryVis Mag Article Dec18 Project
=====================================================================================================================================================

XXX msdnovaryvisdbsvr Admin User name - see WebApp and SQL Server and Vault for value
YYY msdnovaryvisdbsvr Admin User password - see WebApp and SQL Server and Vault for value
AAA is the IP address of your PC - find in msdnovaryvisdbsvr - Firewalls and virtual networks
FFF Storage Account Key as copied from OvaryVisFnApp Azure application settings
CCC ServiceBus RootManageSharedAccessKey - see Azure Functions and ServiceBus
MMM Primary connection string for Service Bus Queue i.e. Endpoint=sb://msdnovaryvissbq.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=CCC'


appsettings.json
----------------

change CCC

{
  "ConnectionStrings": {
    "DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=Msdn.OvaryVisDb;Trusted_Connection=True;MultipleActiveResultSets=true"
  },
  "OvaryVisServiceBus": {
    "Connection": "Endpoint=sb://msdnovaryvis.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=CCC",
    "QueueName": "dimsubmission"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },
  "AllowedHosts": "*"
}

Azure MSDNOvaryVisWebApp application settings
---------------------------------------------

OvaryVisServiceBus:Connection (same as above)
OvaryVisServiceBus:QueueName  (same as above)

DefaultConnection: (copied from Azure SQL Database)


local.settings.json
-------------------

change FFF,CCC

{
  "IsEncrypted": false,
  "Values": {
    "AzureWebJobsStorage": "DefaultEndpointsProtocol=https;AccountName=msdnovaryvisstorageac;AccountKey=FFF;BlobEndpoint=https://msdnovaryvisstorageac.blob.core.windows.net/;TableEndpoint=https://msdnovaryvisstorageac.table.core.windows.net/;QueueEndpoint=https://msdnovaryvisstorageac.queue.core.windows.net/;FileEndpoint=https://msdnovaryvisstorageac.file.core.windows.net/",
    "AzureWebJobsDashboard": "DefaultEndpointsProtocol=https;AccountName=msdnovaryvisstorageac;AccountKey=FFF;BlobEndpoint=https://msdnovaryvisstorageac.blob.core.windows.net/;TableEndpoint=https://msdnovaryvisstorageac.table.core.windows.net/;QueueEndpoint=https://msdnovaryvisstorageac.queue.core.windows.net/;FileEndpoint=https://msdnovaryvisstorageac.file.core.windows.net/",
    "AzureWebJobsServiceBus": "Endpoint=sb://msdnovaryvis.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=CCC",
    "AzureServiceBusQueueName": "dimsubmission",
  },
  "ConnectionStrings": {
    "DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=Msdn.OvaryVisDb;Trusted_Connection=True;MultipleActiveResultSets=true"
  }
}

Azure MSDNOvaryVisFnApp application settings
--------------------------------------------

same as above, but DefaultConnection is copied from Azure SQL Database 


WebApp and SQL Server
---------------------

Notes:
1. webapp create -name MSDNOvaryVisWebApp must be unique as it forms part of the website's URL 
2. sql server create --name msdnovaryvisdbsvr must be unique as it is publically accessible and can only be made up of lowercase letters 'a'-'z', the numbers 0-9 and the hyphen. The hyphen may not lead or trail in the name
3. Take note of the database server name ( msdnovaryvisdbsvr.database.windows.net) as it is needed when using MSSMS to connect with your Azure database
4. az sql server firewall-rule create --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0 allows access to Azure Services - see switch in msdnovaryvisdbsvr - Firewalls and virtual netwworks
5. az sql server firewall-rule create --start-ip-address AAA --end-ip-address AAA  where AAA is the IP address of your local PC. This allows you to use MSSMS to access the Azure database server, but the rule needs to be updated if your IP address changes - mine does each day. 
6. Copy the result of az sql db shown-connection-string and replace <username> with XXX and <password> with YYY before issuing az webapp config connection-string set
	Server=tcp:msdnovaryvisdbsvr.database.windows.net,1433;Database=Msdn.OvaryVisDb;User ID=<username>;Password=<password>;Encrypt=true;Connection Timeout=30;
7. When debugging set local connection string if local DB is needed 'Server=(localdb)\\mssqllocaldb;Database=Msdn.OvaryVisDb;Trusted_Connection=True;MultipleActiveResultSets=true'

Commands:

replace XXX with the database user
replace YYY with the database user's password
replace AAA with the IP address of your PC

az account set --subscription MsdnOvaryVis
az group create --name resMSDNOvaryVis --location "WestEurope"
az appservice plan create --name MSDNOvaryVisPlan --resource-group resMSDNOvaryVis --location "WestEurope" --sku FREE
az webapp create --name MSDNOvaryVisWebApp --plan MSDNOvaryVisPlan --resource-group resMSDNOvaryVis
az sql server create --name msdnovaryvisdbsvr --resource-group resMSDNOvaryVis --location "WestEurope" --admin-user XXX --admin-password YYY
az sql server firewall-rule create --server msdnovaryvisdbsvr --resource-group resMSDNOvaryVis --name AllowMyPC --start-ip-address AAA --end-ip-address AAA
az sql server firewall-rule create --server msdnovaryvisdbsvr --resource-group resMSDNOvaryVis --name AllowAzure --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0
az sql db create --server msdnovaryvisdbsvr --resource-group resMSDNOvaryVis --name Msdn.OvaryVisDb --service-objective Basic
az sql db show-connection-string --name Msdn.OvaryVisDb --server msdnovaryvisdbsvr --client ado.net --output tsv
az webapp config connection-string set --connection-string-type SQLAzure --name MSDNOvaryVisWebApp --resource-group resMSDNOvaryVis --settings DefaultConnection='Server=tcp:msdnovaryvisdbsvr.database.windows.net,1433;Database=Msdn.OvaryVisDb;User ID=XXX;Password=YYY;Encrypt=true;Connection Timeout=30;' 

Azure Functions and ServiceBus Queue
------------------------------------

Notes:
1. Use same --resource-group and --location as for WebApp and SQL Server
2. servicebus namespace --name must be unique as it is publically accessible
3. manually set the defaultconnection string for database - copy from webapp
3. Do not issue az functionapp start until AFTER publishing your Azure Function Project from Visual Studio - the Azure Function must be stopped for publishing to succeed


Commands:

replace MMM with Primary connection string for Service Bus Queue
replace XXX with the database user
replace YYY with the database user's password

az account set --subscription MsdnOvaryVis
az servicebus namespace create  --name MSDNOvaryVisSBQ --location "WestEurope" --resource-group resMSDNOvaryVis --sku Basic
az servicebus queue create --name dimsubmission --namespace-name MSDNOvaryVisSBQ --resource-group resMSDNOvaryVis --max-size 1024 
az storage account create --name msdnovaryvisstorageac --resource-group resMSDNOvaryVis --location "WestEurope" --sku Standard_LRS
az functionapp create --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --storage-account msdnovaryvisstorageac --consumption-plan-location westeurope  
az functionapp stop --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis 

az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'AzureServiceBusQueueName=dimsubmission'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'AzureWebJobsServiceBus=MMM'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'FUNCTIONS_EXTENSION_VERSION=~2'
use Azure Portal to set MSDNOvaryVisFnApp's connection string as DefaultConnection 'Server=tcp:msdnovaryvisdbsvr.database.windows.net,1433;Database=Msdn.OvaryVisDb;User ID=XXX;Password=YYY;Encrypt=true;Connection Timeout=30;' 


az webapp config appsettings set --name MSDNOvaryVisWebApp --resource-group resMSDNOvaryVis --settings 'OvaryVisServiceBus:QueueName=dimsubmission'
az webapp config appsettings set --name MSDNOvaryVisWebApp --resource-group resMSDNOvaryVis --settings 'OvaryVisServiceBus:Connection=MMM'

[wait until after publishing from Visual Studio]

az functionapp start --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis 


Creating Security Principal
---------------------------

replace DDD with ApplicationId returned by $sp | Select DisplayName, ApplicationId into local.settings.json "ClassifierSecPrincipalId"
replace EEE with used as plain text password into local.settings.json "ClassifierSecPrincipalKey"
replace III with TenantID returned by Get-AzureRmSubscription -SubscriptionName MsdnOvaryVis into local.settings.json "ClassifierTenantId"


Commands:

az account set --subscription MsdnOvaryVis

$password = ConvertTo-SecureString "EEE" -AsPlainText -Force
$sp = New-AzureRmADServicePrincipal -DisplayName "MSDNOvaryVisApp" -Password $password
New-AzureRmRoleAssignment -ServicePrincipalName $sp.ApplicationId -RoleDefinitionName Contributor
$sp | Select DisplayName, ApplicationId
Get-AzureRmSubscription -SubscriptionName MsdnOvaryVis


Azure Function Application Settings for Security Principal
----------------------------------------------------------

replace DDD with ApplicationId returned by $sp | Select DisplayName, ApplicationId into local.settings.json "ClassifierSecPrincipalId"
replace EEE with used as plain text password into local.settings.json "ClassifierSecPrincipalKey"
replace III with TenantID returned by Get-AzureRmSubscription -SubscriptionName MsdnOvaryVis into local.settings.json "ClassifierTenantId"

Commands:

az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'SecPrincipalId=DDD'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'SecPrincipalKey=EEE'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'TenantId=III'


Creating Container Image
------------------------

Notes:
1. only needed for testing - MSDNOvaryVisFnApp creates this image as required and deletes it if not used > 10 mins
2. create an account on Docker.Hub to get username GGG and password HHH

az container create --image wpqs/ovaryclassifier --name ovaryvisr --resource-group resMSDNOvaryVis --ip-address Public --ports 80 --cpu 1 --memory 1 --registry-login-server index.docker.io --registry-username GGG --registry-password HHH

Azure Function Application Settings for Server
----------------------------------------------

replace GGG with any valid DockerHubUsername
replace HHH with password for the DockerHubUsername

Commands:

az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'ClassifierContainerName=ovaryclassifier'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'ClassifierCpus=1'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'ClassifierImage=wpqs/ovaryclassifier'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'ClassifierMemoryGB=1'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'ClassifierRegion=WestEurope'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'ClassifierResourceGroup=resMSDNOvaryVis'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'DockerHubUserName=GGG'
az functionapp config appsettings set --name MSDNOvaryVisFnApp --resource-group resMSDNOvaryVis --settings 'DockerHubPassword=HHH'


[end]










